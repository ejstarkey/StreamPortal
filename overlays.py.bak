from flask import Blueprint, render_template, jsonify
import json
import requests
from bs4 import BeautifulSoup
import os

# Blueprint definition; static_folder is served at '/static/'
overlays_bp = Blueprint(
    "overlays",
    __name__,
    template_folder="templates",
    static_folder="static",
    static_url_path="/static"
)

# Path to your live streams config
CONFIG_PATH = "/home/cornerpins/portal/streams_config.json"

def get_overlay_html(pair_id, side):
    import re

    # Load config
    with open(CONFIG_PATH, "r", encoding="utf-8") as f:
        cfg = json.load(f)

    try:
        pair = cfg["lane_pairs"][pair_id]
    except (IndexError, KeyError):
        return "<p>Invalid lane pair.</p>"

    url = pair.get(
        "odd_lane_scoring_source" if side == "a" else "even_lane_scoring_source",
        ""
    )
    if not url:
        return "<p>No overlay URL configured.</p>"

    try:
        r = requests.get(url, timeout=5)
        r.raise_for_status()
    except Exception as e:
        return f"<p>Error fetching overlay: {e}</p>"

    soup = BeautifulSoup(r.text, "html.parser")

    # Try Livescores format
    wrap = soup.find("div", id="players-wrap")
    if wrap:
        return wrap.prettify()

    # Try DuoHD format
    zoom = soup.find("div", id="zoom-wrap")
    if zoom:
        return zoom.prettify()

    # Fallback: return entire <body> content if defined
    body = soup.find("body")
    if body:
        return body.prettify()

    # Still nothing useful found
    return "<p>Overlay content not found. Please verify the scoring overlay format.</p>"

    return wrap.prettify()

@overlays_bp.route("/overlay/odd/<int:pair_id>")
def overlay_odd(pair_id):
    content = get_overlay_html(pair_id, "a")
    return render_template("overlay_embed.html", content=content, anchor="left")

@overlays_bp.route("/overlay/even/<int:pair_id>")
def overlay_even(pair_id):
    content = get_overlay_html(pair_id, "b")
    return render_template("overlay_embed.html", content=content, anchor="right")
